{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAaC,SAASC,cAAc,SACpCC,EAAYF,SAASC,cAAc,kBACnCE,EAAWH,SAASC,cAAc,iBAClCG,EAAaJ,SAASC,cAAc,mBAE1C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAwCPR,EAAWgB,iBAAiB,UAhC5B,SAAkBC,GAUhB,GATAA,EAAMC,iBAUJC,OAAOhB,EAAUiB,OAAS,GAC1BD,OAAOf,EAASgB,OAAS,GACzBD,OAAOd,EAAWe,QAAU,EAGH,YADzBtB,EAAAuB,OAAOC,QAAQ,+BAIjB,IAAIC,EAAQJ,OAAOhB,EAAUiB,OAC7B,IAAK,IAAII,EAAU,EAAGA,GAAWL,OAAOd,EAAWe,OAAQI,IACzDC,QAAQC,IAAIH,GACZjB,EAAckB,EAASD,GACpBI,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBV,EAAAuB,OAAOO,QAAQ,uBAAqBrB,QAAiBC,UAEtDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBV,EAAAuB,OAAOC,QAAQ,sBAAoBf,QAAeC,UAEtDe,GAASJ,OAAOf,EAASgB","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formSubmit = document.querySelector('.form');\nconst formDelay = document.querySelector('[name=\"delay\"]');\nconst formStep = document.querySelector('[name=\"step\"]');\nconst formAmount = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// for (let i = 0; i <= 20; i += 5) {\n//   console.log(i);\n// }\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  // if (\n  //   formDelay.value === '' ||\n  //   formStep.value === '' ||\n  //   formAmount.value === ''\n  // ) {\n  //   Notify.failure('Введите данные');\n  //   return;\n  // }\n  if (\n    Number(formDelay.value) < 0 ||\n    Number(formStep.value) < 0 ||\n    Number(formAmount.value) <= 0\n  ) {\n    Notify.failure('Введите положительные числа');\n    return;\n  }\n\n  let delay = Number(formDelay.value);\n  for (let counter = 1; counter <= Number(formAmount.value); counter++) {\n    console.log(delay);\n    createPromise(counter, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(formStep.value);\n  }\n}\nformSubmit.addEventListener('submit', onSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formSubmit","document","querySelector","$47d4ff9957288465$var$formDelay","$47d4ff9957288465$var$formStep","$47d4ff9957288465$var$formAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","Number","value","Notify","failure","delay1","counter","console","log","then","success","catch"],"version":3,"file":"03-promises.7a8c672a.js.map"}